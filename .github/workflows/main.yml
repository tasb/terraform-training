name: Main Workflow

on:
  push:
    branches:
      - main

env:
  PREFIX: <your_prefix>

jobs:
  plan-apply-tst:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Require write permission to Fetch an OIDC token.
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.10.2

    - name: Azure CLI Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan -var=db_password=${{ secrets.DB_PASSWORD }} -var=prefix=${{ env.PREFIX}}-tst -out ./infraTstPlan

    - name: Terraform Apply
      run: terraform apply -auto-approve ./infraTstPlan
  
  destroy-tst:
    runs-on: ubuntu-latest
    needs: plan-apply-tst
    environment: tst
    permissions:
      id-token: write # Require write permission to Fetch an OIDC token.
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.10.2

    - name: Azure CLI Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
    - name: Terraform Init
      run: terraform init

    - name: Terraform Destroy
      run: terraform destroy -auto-approve

  plan-apply:
    runs-on: ubuntu-latest
    needs: destroy-tst
    permissions:
      id-token: write # Require write permission to Fetch an OIDC token.
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.10.2

    - name: Azure CLI Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan -var=db_password=${{ secrets.DB_PASSWORD }} -var=prefix=${{ env.PREFIX}} -out ./infraPlan

    - name: Terraform Apply
      run: terraform apply -auto-approve ./infraPlan